{"version":3,"sources":["ng://angular2-useful-swiper/lib/swiper/swiper.component.ts","ng://angular2-useful-swiper/lib/angular2-useful-swiper.module.ts"],"names":["SwiperComponent","elementRef","changeDetectorRef","this","slideCount","initialized","shouldInitialize","Object","defineProperty","prototype","value","ngAfterViewInit","setup","swiper","nativeElement","querySelector","swiperWrapper","childElementCount","Swiper","config","detectChanges","ngAfterViewChecked","update","Component","args","selector","template","ElementRef","ChangeDetectorRef","Input","Angular2UsefulSwiperModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"qbAAA,IAAAA,EAAA,WA8BE,SAAAA,EACUC,EACAC,GADAC,KAAAF,WAAAA,EACAE,KAAAD,kBAAAA,EANFC,KAAAC,WAAa,EACbD,KAAAE,aAAc,EACdF,KAAAG,kBAAmB,EA6C7B,OAtDEC,OAAAC,eAAyBR,EAAAS,UAAA,aAAU,KAAnC,SAAoCC,GAClCP,KAAKG,kBAAmBH,KAAKE,aAAsBK,mCAerDV,EAAAS,UAAAE,gBAAA,WACMR,KAAKG,kBACPH,KAAKS,SAITZ,EAAAS,UAAAG,MAAA,WACOT,KAAKU,SAEJV,KAAKF,WAAWa,cAAcC,gBAChCZ,KAAKa,cAAgBb,KAAKF,WAAWa,cAAcC,cACjD,mBAEFZ,KAAKC,WAAaD,KAAKa,cAAcC,kBACrCd,KAAKU,OAAS,IAAIK,EAChBf,KAAKF,WAAWa,cAAcC,cAAc,gBAC5CZ,KAAKgB,QAEPhB,KAAKD,kBAAkBkB,iBAGzBjB,KAAKG,kBAAmB,IAI5BN,EAAAS,UAAAY,mBAAA,WACMlB,KAAKG,kBACPH,KAAKS,QAILT,KAAKa,eACLb,KAAKC,aAAeD,KAAKa,cAAcC,oBAEvCd,KAAKC,WAAaD,KAAKa,cAAcC,kBACrCd,KAAKU,OAAOS,+BA5DjBC,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,SACVC,SAAA,qQARAC,EAAAA,kBAFAC,EAAAA,qDAeCC,EAAAA,0BACAA,EAAAA,MAAKL,KAAA,CAAC,iBAsDTxB,EAzEA,GCAA8B,EAAA,WAIA,SAAAA,KAKyC,2BALxCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAAChC,GACfiC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACnC,OAE6B8B,EATzC","sourcesContent":["import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input\n} from '@angular/core';\nimport Swiper, { SwiperOptions } from 'swiper';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'swiper',\n  templateUrl: './swiper.component.html',\n  styleUrls: ['./swiper.component.css']\n})\nexport class SwiperComponent implements AfterViewChecked, AfterViewInit {\n  // add all the options as optional settings and use them to create an options object\n  @Input() config: SwiperOptions;\n  @Input('initialize') set initialize(value: boolean) {\n    this.shouldInitialize = this.initialized ? false : value;\n  }\n\n  swiper: any;\n\n  private swiperWrapper: any;\n  private slideCount = 0;\n  private initialized = false;\n  private shouldInitialize = true;\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n  }\n\n  setup() {\n    if (!this.swiper) {\n      // if rendered on server querySelector is undefined\n      if (this.elementRef.nativeElement.querySelector) {\n        this.swiperWrapper = this.elementRef.nativeElement.querySelector(\n          '.swiper-wrapper'\n        );\n        this.slideCount = this.swiperWrapper.childElementCount;\n        this.swiper = new Swiper(\n          this.elementRef.nativeElement.querySelector('swiper > div'),\n          this.config\n        );\n        this.changeDetectorRef.detectChanges();\n      }\n\n      this.shouldInitialize = false;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n\n    if (\n      this.swiperWrapper &&\n      this.slideCount !== this.swiperWrapper.childElementCount\n    ) {\n      this.slideCount = this.swiperWrapper.childElementCount;\n      this.swiper.update();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SwiperComponent } from './swiper/swiper.component';\n\n@NgModule({\n  declarations: [SwiperComponent],\n  imports: [CommonModule],\n  exports: [SwiperComponent]\n})\nexport class Angular2UsefulSwiperModule {}\n"]}