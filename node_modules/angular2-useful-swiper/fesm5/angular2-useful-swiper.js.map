{"version":3,"file":"angular2-useful-swiper.js","sources":["ng://angular2-useful-swiper/lib/swiper/swiper.component.ts","ng://angular2-useful-swiper/lib/angular2-useful-swiper.module.ts"],"sourcesContent":["import {\n  AfterViewChecked,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input\n} from '@angular/core';\nimport Swiper, { SwiperOptions } from 'swiper';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'swiper',\n  templateUrl: './swiper.component.html',\n  styleUrls: ['./swiper.component.css']\n})\nexport class SwiperComponent implements AfterViewChecked, AfterViewInit {\n  // add all the options as optional settings and use them to create an options object\n  @Input() config: SwiperOptions;\n  @Input('initialize') set initialize(value: boolean) {\n    this.shouldInitialize = this.initialized ? false : value;\n  }\n\n  swiper: any;\n\n  private swiperWrapper: any;\n  private slideCount = 0;\n  private initialized = false;\n  private shouldInitialize = true;\n\n  constructor(\n    private elementRef: ElementRef,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n  }\n\n  setup() {\n    if (!this.swiper) {\n      // if rendered on server querySelector is undefined\n      if (this.elementRef.nativeElement.querySelector) {\n        this.swiperWrapper = this.elementRef.nativeElement.querySelector(\n          '.swiper-wrapper'\n        );\n        this.slideCount = this.swiperWrapper.childElementCount;\n        this.swiper = new Swiper(\n          this.elementRef.nativeElement.querySelector('swiper > div'),\n          this.config\n        );\n        this.changeDetectorRef.detectChanges();\n      }\n\n      this.shouldInitialize = false;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldInitialize) {\n      this.setup();\n    }\n\n    if (\n      this.swiperWrapper &&\n      this.slideCount !== this.swiperWrapper.childElementCount\n    ) {\n      this.slideCount = this.swiperWrapper.childElementCount;\n      this.swiper.update();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SwiperComponent } from './swiper/swiper.component';\n\n@NgModule({\n  declarations: [SwiperComponent],\n  imports: [CommonModule],\n  exports: [SwiperComponent]\n})\nexport class Angular2UsefulSwiperModule {}\n"],"names":[],"mappings":";;;;;;;;AAAA;IA8BE,yBACU,UAAsB,EACtB,iBAAoC;QADpC,eAAU,GAAV,UAAU,CAAY;QACtB,sBAAiB,GAAjB,iBAAiB,CAAmB;QANtC,eAAU,GAAG,CAAC,CAAC;QACf,gBAAW,GAAG,KAAK,CAAC;QACpB,qBAAgB,GAAG,IAAI,CAAC;KAK5B;IAdJ,sBAAyB,uCAAU;;;;;QAAnC,UAAoC,KAAc;YAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC;SAC1D;;;OAAA;;;;IAcD,yCAAe;;;IAAf;QACE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;;IAED,+BAAK;;;IAAL;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;YAEhB,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,EAAE;gBAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAC9D,iBAAiB,CAClB,CAAC;gBACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;gBACvD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,EAC3D,IAAI,CAAC,MAAM,CACZ,CAAC;gBACF,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;aACxC;YAED,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;KACF;;;;IAED,4CAAkB;;;IAAlB;QACE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QAED,IACE,IAAI,CAAC,aAAa;YAClB,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,aAAa,CAAC,iBAAiB,EACxD;YACA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACtB;KACF;;gBA9DF,SAAS,SAAC;;oBAET,QAAQ,EAAE,QAAQ;oBAClB,wJAAsC;;iBAEvC;;;;gBAVC,UAAU;gBAFV,iBAAiB;;;yBAehB,KAAK;6BACL,KAAK,SAAC,YAAY;;IAsDrB,sBAAC;CA/DD;;;;;;ACVA;IAIA;KAK0C;;gBALzC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,eAAe,CAAC;iBAC3B;;IACwC,iCAAC;CAL1C;;;;"}