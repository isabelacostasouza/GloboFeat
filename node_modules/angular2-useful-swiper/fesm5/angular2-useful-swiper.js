import { CommonModule } from '@angular/common';
import { Component, ElementRef, ChangeDetectorRef, Input, NgModule } from '@angular/core';
import Swiper from 'swiper';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SwiperComponent = /** @class */ (function () {
    function SwiperComponent(elementRef, changeDetectorRef) {
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.slideCount = 0;
        this.initialized = false;
        this.shouldInitialize = true;
    }
    Object.defineProperty(SwiperComponent.prototype, "initialize", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.shouldInitialize = this.initialized ? false : value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SwiperComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.shouldInitialize) {
            this.setup();
        }
    };
    /**
     * @return {?}
     */
    SwiperComponent.prototype.setup = /**
     * @return {?}
     */
    function () {
        if (!this.swiper) {
            // if rendered on server querySelector is undefined
            if (this.elementRef.nativeElement.querySelector) {
                this.swiperWrapper = this.elementRef.nativeElement.querySelector('.swiper-wrapper');
                this.slideCount = this.swiperWrapper.childElementCount;
                this.swiper = new Swiper(this.elementRef.nativeElement.querySelector('swiper > div'), this.config);
                this.changeDetectorRef.detectChanges();
            }
            this.shouldInitialize = false;
        }
    };
    /**
     * @return {?}
     */
    SwiperComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        if (this.shouldInitialize) {
            this.setup();
        }
        if (this.swiperWrapper &&
            this.slideCount !== this.swiperWrapper.childElementCount) {
            this.slideCount = this.swiperWrapper.childElementCount;
            this.swiper.update();
        }
    };
    SwiperComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'swiper',
                    template: "<div\n  [ngClass]=\"{\n    'swiper-container': config?.containerModifierClass === undefined\n  }\"\n>\n  <ng-content></ng-content>\n</div>\n",
                    styles: [":host{display:block}.swiper-container{width:100%;height:100%}"]
                }] }
    ];
    /** @nocollapse */
    SwiperComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef }
    ]; };
    SwiperComponent.propDecorators = {
        config: [{ type: Input }],
        initialize: [{ type: Input, args: ['initialize',] }]
    };
    return SwiperComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Angular2UsefulSwiperModule = /** @class */ (function () {
    function Angular2UsefulSwiperModule() {
    }
    Angular2UsefulSwiperModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [SwiperComponent],
                    imports: [CommonModule],
                    exports: [SwiperComponent]
                },] }
    ];
    return Angular2UsefulSwiperModule;
}());

export { Angular2UsefulSwiperModule, SwiperComponent };
//# sourceMappingURL=angular2-useful-swiper.js.map
